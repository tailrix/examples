name: Build and Publish on Release of playgound

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'playground/**'
      - 'deployments/tailrix-exp-playground/**'
      - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'
          cache-dependency-path: ./playground/package-lock.json

      - name: Install dependencies
        working-directory: ./playground
        run: npm ci

      - name: Determine next version
        id: bump
        run: |
          PREFIX="tailrix-exp-playground-"

          # get the latest tag matching the prefix
          LATEST_TAG=$(git describe --tags --match "${PREFIX}*" --abbrev=0)
          echo "Latest tag: $LATEST_TAG"

          # strip prefix, split into MAJOR.MINOR.PATCH
          VERSION=${LATEST_TAG#"$PREFIX"}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # bump minor, reset patch
          NEXT_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEXT_MINOR}.0"
          NEW_TAG="${PREFIX}${NEW_VERSION}"

          echo "New version: $NEW_VERSION"
          echo "New tag: $NEW_TAG"

          # expose for later steps
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG"         >> $GITHUB_OUTPUT

      - name: Run ESLint
        working-directory: ./playground
        run: npm run lint -- --max-warnings=0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: |
            buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deployments/tailrix-exp-playground/Dockerfile
          push: true
          tags: |
            ghcr.io/tailrix/tailrix-exp-playground:latest
            ghcr.io/tailrix/tailrix-exp-playground:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move updated Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.6.3" # default is latest (stable)
        id: install

      - name: build the charts
        run: |
          export URLBASE=https://tailrix.github.io/helm-charts
          cd deployments
          pip3 install -r scripts/requirements.txt
          python3 scripts/release_helmchart.py ./ $URLBASE --build-all
        shell: bash

      - name: Pushes to another repository
        uses: fredrikluo/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.BP_RELEASE_CHART }}
        with:
          source-directory: "deployments/.build"
          destination-github-username: "tailrix"
          destination-repository-name: "helm-charts"
          user-email: bot@bp.com
          target-branch: main
          post-process-cmd: "helm repo index ."
